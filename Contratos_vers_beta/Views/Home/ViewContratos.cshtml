@using Contratos_vers_beta.Models;
@model List<Contratos_vers_beta.Models.Contratos>
@{
    ViewBag.Title = "ViewContratos";
}

<div class="jumbotron stylejumbo" style="margin-top:4.5rem;">
    <h1 class="display-5 text-align">¡Lista de Contratos!</h1>
    <p class="lead text-align">Contratos ordenados de forma descendente.</p>
</div>

@if (ViewData["Error"] != null)
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>Error!</strong> @Html.Raw(ViewData["Error"])
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
    </div>
}

@if (ViewData["Success"] != null)
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Éxito!</strong> @Html.Raw(ViewData["Success"])
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xl-2">
        @Html.ActionLink("Agregar contrato", "Create", "Contratos", routeValues: null, htmlAttributes: new { @class = "btn color-azul boton-menu" })
    </div>
    <div class="col-xl-2">
        @Html.ActionLink("Importar Excel", "ImportExcelContratos", "Home", routeValues: null, htmlAttributes: new { @class = "btn color-verde boton-menu" })
    </div>
    <div class="col-xl-2">
        @Html.ActionLink("Exportar PDF", "CreaPDF", "Home", routeValues: null, htmlAttributes: new { @class = "btn color-verde boton-menu" })
    </div>
</div>


<table id="example" class="display table table-bordered tabla-text-centrado table-striped table-responsive-lg" style="width:100%">
    <thead>
        <tr>
            <th>Clave del Contrato</th>
            <th>Fecha</th>
            <th>Empresa 1</th>
            <th>Apoderado 1</th>
            <th>Firma Apoderado 1</th>
            <th>Empresa 2</th>
            <th>Apoderado 2</th>
            <th>Firma Apoderado 2</th>
            <th>Empresa 3</th>
            <th>Apoderado 3</th>
            <th>Firma Apoderado 3</th>
            <th>Contraprestación IVA incluido</th>
            <th>Vigencia del Convenio</th>
            <th>Original o Copia</th>
            <th>Año de la firma</th>
            <th>Observaciones</th>
            <th>Finalizado</th>
            <th colspan="4"></th>
        </tr>
    </thead>
    <tbody >
        @foreach (var c in Model)
        {
        <tr>
            <td style="vertical-align:middle">@c.CLAVE_DEL_CONTRATO</td>
            <td style="vertical-align:middle">@(c.FECHA.HasValue ? c.FECHA.Value.ToShortDateString() : "NO INDICA")</td>
            <td style="vertical-align:middle">@c.EMPRESA</td>
            <td style="vertical-align:middle">@c.APODERADO</td>
            <td style="vertical-align:middle">@(c.FIRMADO ? "SI" : "NO")</td>
            <td style="vertical-align:middle">@c.EMPRESA_1</td>
            <td style="vertical-align:middle">@c.APODERADO_1</td>
            <td style="vertical-align:middle">@(c.FIRMADO_1 ? "SI" : "NO")</td>
            <td style="vertical-align:middle">@(c.EMPRESA_2.IsEmpty() ? "NO INDICA" : c.EMPRESA_2)</td>
            <td style="vertical-align:middle">@(c.APODERADO_2.IsEmpty() ? "NO INDICA" : c.APODERADO_2)</td>
            <td style="vertical-align:middle">@((c.APODERADO_2.IsEmpty() && c.EMPRESA_2.IsEmpty())? "NO INDICA" : (c.FIRMADO_2 ? "SI" : "NO"))</td>
            <td style="vertical-align:middle">@c.CONTRAPRESTACION_IVA_INCLUIDO</td>
            <td style="vertical-align:middle">@c.VIGENCIA_TAL_CUAL_ESTIPULA_EL_CONTRATO</td>
            <td style="vertical-align:middle">@(c.ORIGINAL_O_COPIA ? "COPIA" : "ORIGINAL")</td>
            <td style="vertical-align:middle">@c.ANIO_DE_FIRMA</td>
            <td style="vertical-align:middle">@(c.OBSERVACIONES.IsEmpty() ? "NO INDICA" : c.OBSERVACIONES)</td>
            <td style="vertical-align:middle">@(c.FINALIZADO ? "SI" : "NO")</td>
            <td style="vertical-align:middle">@Html.ActionLink("Editar", "Edit", "Contratos", routeValues: new { Id = c.Id }, htmlAttributes: new { @class = "btn btn-warning btn-text-white"})</td>
            <td style="vertical-align:middle">@Html.ActionLink("Eliminar", "Delete", "Contratos", routeValues: new { Id = c.Id }, htmlAttributes: new { @class = "btn btn-danger btn-text-white"})</td>
            <td style="vertical-align:middle">@Html.ActionLink("Cargar PDF", "ImportPDFContratos", routeValues: new { Id = c.Id }, htmlAttributes: new { @class = "btn btn-success btn-text-white" })</td>
            <td style="vertical-align:middle">@Html.ActionLink("Ver PDF", "DisplayPDFContratos", routeValues: new { Id = c.Id }, htmlAttributes: new { @class = "btn btn-info btn-text-white", target = "_blank"})</td>
        </tr>
        }
    </tbody>
</table>



<script>
    $(document).ready(function () {

        // Setup - add a text input to each footer cell
        $('#example thead tr').clone(true).appendTo('#example thead');
        $('#example thead tr:eq(1) th').each(function (i) {
                    var title = $(this).text();
            $(this).html('<input type="text" class="input-style" placeholder="Buscar ' + title + '" />');

            $('input', this).on('keyup change', function () {
                        if (table.column(i).search() !== this.value) {
                            table
                                .column(i)
                                .search(this.value)
                                .draw();
                        }
                    });
                });

                var table = $('#example').DataTable({
                orderCellsTop: true,
            fixedHeader: true,
            orderCellsTop: true,
            fixedHeader: true,
            language: {
                        "search": "Buscar:",
                "info": "Mostrando del _START_ al _END_ de _TOTAL_ contratos",
                "infoEmpty": "No hay contratos",
                "lengthMenu": "Mostrar _MENU_ contratos",
                paginate: {
                        first: '«',
                    previous: '<',
                    next: '>',
                    last: '»'
                },
                aria: {
                        paginate: {
                            first: 'Primero',
                        previous: 'Último',
                        next: 'Siguiente',
                        last: 'Última'
                        }
                        }
                    }


                });


                new $.fn.dataTable.FixedHeader(table);
            });
</script>
